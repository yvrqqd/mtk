import runtime;
import ds/array;
import ds/tree;


inds(a : [int], m : int) -> [Pair<int, int>] {
    tree : Tree = foldi(a, makeTree(), \i, t, value ->
            setTree(t, value, arrayPush(lookupTreeDef(t, value, []), i)));

    foldi(a, [], \i, pairs, a_i ->
        switch (lookupTree(tree, m - a_i)) {
            Some(ind): concat(pairs, map(ind, \x -> Pair(x, i)));
            None(): pairs;
        });
}

main() {
    m : int = 10;
    array : [int] = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    println(inds(array, m));
}